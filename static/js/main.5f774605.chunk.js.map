{"version":3,"sources":["components/Footer.js","components/Navbar.js","components/TextUtils.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Footer","props","react_default","a","createElement","className","style","color","mode","role","Navbar","concat","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","htmlFor","TextUtils","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","value","onChange","event","target","backgroundColor","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","i","navigator","clipboard","writeText","split","join","filter","element","Alert","height","alert","word","lower","charAt","slice","capitalize","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","link","document","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.5f774605.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Footer(props) {\r\n  return (\r\n    <div className='text-center my-3' style={{color: props.mode==='dark'?'white':'black'}}>By <span role=\"img\">❤️</span>KundanRPatil</div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom';\r\nexport default function Navbar(props) {\r\n    return (\r\n        <div>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n                <div className=\"container-fluid \">\r\n                    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link \" aria-current=\"page\" href=\"#\">Home</a>\r\n                            </li>\r\n                            {/* <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" to=\"/about\">{props.link}</Link>\r\n                            </li> */}\r\n\r\n\r\n                        </ul>\r\n                        {/* <form className=\"d-flex \" role=\"search\">\r\n                            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                            <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n                        </form> */}\r\n                        <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n                            <input onClick={props.toggleMode} className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n                                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React,{useState} from 'react'\r\n\r\nexport default function TextUtils(props) {\r\n    // useState hook\r\n    const [text,setText] = useState(\"Write here...\");\r\n\r\n    // event to able change\r\n    const handleOnChange=(event)=>{\r\n        setText(event.target.value);\r\n    }\r\n\r\n    // function to convert upperCase\r\n    const handleUpClick=()=>{\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert('Coverted to Uppercase','success');\r\n    }\r\n\r\n    // function to convert lowerCase\r\n    const handleLowClick=()=>{\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert('Coverted to Lowercase','success');\r\n    }\r\n    // function to reverse\r\n    const handlerevClick=()=>{\r\n        let newText=\"\";\r\n        for(let i=text.length-1;i>=0;i--){\r\n            newText += text[i];\r\n        }\r\n        \r\n        setText(newText);\r\n        props.showAlert('reversed','success');\r\n    }\r\n    // function to copy text\r\n    const handlecopyClick=()=>{\r\n    //   var text = document.getElementById('myBox');\r\n    //   text.select();\r\n    //   navigator.clipboard.writeText(text.value);\r\n      navigator.clipboard.writeText(text);\r\n    //   document.getSelection().removeAllRanges();\r\n      props.showAlert('Copied','success');\r\n    }\r\n    // function to clear\r\n    const handleclearClick=()=>{\r\n        let newText=\"\";\r\n        \r\n        setText(newText);\r\n        props.showAlert('Cleared','danger');\r\n    }\r\n    // function to remove Extra spaces\r\n    const handleremoveExtraSpaces=()=>{\r\n        let newText= text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert('Removed Extra Spaces','danger');\r\n    }\r\n    return (\r\n        <>\r\n\r\n            <div className=\"container\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n                <h3>Try TextUtils- Word counter,Character counter, Remove extra spaces</h3>\r\n                <div className=\"mb-3 my-3\" >\r\n                    <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'gray':'white', color: props.mode==='dark'?'white':'black'}} id=\"myBox\" rows=\"6\"></textarea>\r\n                </div>\r\n                <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleUpClick}>Convert to UpperCase</button>\r\n                <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleLowClick}>Convert to LowerCase</button>\r\n                <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handlerevClick}>Reverse</button>\r\n                <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handlecopyClick}>Copy</button>\r\n                <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleremoveExtraSpaces}>Remove Extra Spaces</button>\r\n                <button disabled={text.length===0} className=\"btn btn-danger mx-2 my-2\" onClick={handleclearClick}>Clear</button>\r\n\r\n            </div>\r\n            <div className=\"container\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n                {/* logic to remove blank spaces */}\r\n                <h6>No of Words: {text.split(/\\s+/).filter((element)=>{return element.length!==0}).length}</h6>\r\n                <h6>No of Characters: {text.length}</h6>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        <div style={{height: '50px'}}>\r\n  \r\n\r\n            {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from \"react\";\nimport React from 'react'\n// import About from \"./components/About\";\nimport Footer from \"./components/Footer\";\nimport Navbar from \"./components/Navbar\";\nimport TextUtils from \"./components/TextUtils\";\nimport Alert from \"./components/Alert\";\n// import { HashRouter, Routes, Route} from \"react-router-dom\";\n\nfunction App() {\n\n  //lecture 11: improving dark mode\n  const [mode, setMode] = useState('light');\n\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#665887';\n      showAlert('Dark mode enabled', 'success');\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert('Light mode enabled', 'success');\n    }\n  }\n  return (\n    <>\n      {/* props */}\n      {/* <HashRouter basename=\"/textUtils-krp\"> */}\n      <Navbar title=\"KRP\" link=\"About\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n        {/* <Routes> */}\n          {/* <Route exact path=\"/textUtils-krp\" element={}/> */}\n          <TextUtils mode={mode} showAlert={showAlert} />\n          {/* <Route path=\"/about\" element={<About />}/> */}\n        {/* </Routes> */}\n\n\n      <Footer mode={mode} />\n      {/* </HashRouter> */}\n    </>\n  );\n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}