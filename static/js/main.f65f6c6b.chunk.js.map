{"version":3,"sources":["components/About.js","components/Footer.js","components/Navbar.js","components/TextUtils.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","_useState","useState","_useState2","Object","slicedToArray","text","setText","_useState3","color","backgroundColor","_useState4","myStyle","setmyStyle","react_default","a","createElement","className","style","id","type","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","data-bs-parent","onClick","Footer","props","mode","role","Navbar","concat","dist","to","title","aria-label","aria-current","link","toggleMode","htmlFor","TextUtils","Fragment","value","onChange","event","target","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","i","navigator","clipboard","writeText","split","join","filter","element","Alert","height","alert","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","basename","document","body","react_router_dist","exact","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.f65f6c6b.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport default function About() {\r\n    const [text, setText] = useState('Dark Mode')\r\n    const [myStyle, setmyStyle] = useState({\r\n        color: 'black',\r\n        backgroundColor: 'white'\r\n    })\r\n\r\n    const toggleStyle = () => {\r\n        if (myStyle.color === 'white') {\r\n            setmyStyle({\r\n                color: 'black',\r\n                backgroundColor: 'white'\r\n            });\r\n            setText('Dark Mode');\r\n        } else {\r\n            setmyStyle({\r\n                color: 'white',\r\n                backgroundColor: 'black'\r\n            });\r\n            setText('Light Mode');\r\n        }\r\n    }\r\n    return (\r\n        <div className='container my-3' style={myStyle}>\r\n            <h1>About Us</h1>\r\n            <div className='container'>TextUtils is a website that offers a range of text-related tools and utilities for manipulating and analyzing text. Its main features include:</div>\r\n            <div className=\"accordion accordion-flush\" id=\"accordionFlushExample\">\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\">\r\n                        <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseOne\" aria-expanded=\"false\" aria-controls=\"flush-collapseOne\">\r\n                            <strong>Word Count</strong>\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"flush-collapseOne\" className=\"accordion-collapse collapse\" data-bs-parent=\"#accordionFlushExample\">\r\n                        <div className=\"accordion-body\" style={myStyle}>TextUtils allows users to input text and instantly find out how many words are in the provided text. This is helpful for writers, students, and professionals who need to keep track of their document's word count.</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\">\r\n                        <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseTwo\" aria-expanded=\"false\" aria-controls=\"flush-collapseTwo\">\r\n                            <strong>Remove Blank Spaces</strong>\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"flush-collapseTwo\" className=\"accordion-collapse collapse\" data-bs-parent=\"#accordionFlushExample\">\r\n                        <div className=\"accordion-body\" style={myStyle}>The website offers a tool to remove extra spaces and formatting from text. This feature is useful for cleaning up text copied from various sources, ensuring it's more readable and consistent.</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\">\r\n                        <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseThree\" aria-expanded=\"false\" aria-controls=\"flush-collapseThree\">\r\n                            <strong>Convert to Uppercase and Lowercase</strong>\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"flush-collapseThree\" className=\"accordion-collapse collapse\" data-bs-parent=\"#accordionFlushExample\">\r\n                        <div className=\"accordion-body\" style={myStyle}>TextUtils allows users to convert text to uppercase, making it easy to create titles, headlines, or text that needs to be emphasized.\r\n\r\n                            Conversely, users can convert text to lowercase, which can be handy for standardizing text, making it more uniform and readable.</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"container my-3\">\r\n                <button type='button' onClick={toggleStyle} className='btn btn-primary'>{text}</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Footer(props) {\r\n  return (\r\n    <div className='text-center my-3' style={{color: props.mode==='dark'?'white':'black'}}>By <span role=\"img\">❤️</span>KundanRPatil</div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom';\r\nexport default function Navbar(props) {\r\n    return (\r\n        <div>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n                <div className=\"container-fluid \">\r\n                    <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link \" aria-current=\"page\" to=\"/\">Home</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" to=\"/about\">{props.link}</Link>\r\n                            </li>\r\n\r\n\r\n                        </ul>\r\n                        {/* <form className=\"d-flex \" role=\"search\">\r\n                            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                            <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n                        </form> */}\r\n                        <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n                            <input onClick={props.toggleMode} className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n                                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React,{useState} from 'react'\r\n\r\nexport default function TextUtils(props) {\r\n    // useState hook\r\n    const [text,setText] = useState(\"Write here...\");\r\n\r\n    // event to able change\r\n    const handleOnChange=(event)=>{\r\n        setText(event.target.value);\r\n    }\r\n\r\n    // function to convert upperCase\r\n    const handleUpClick=()=>{\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert('Coverted to Uppercase','success');\r\n    }\r\n\r\n    // function to convert lowerCase\r\n    const handleLowClick=()=>{\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert('Coverted to Lowercase','success');\r\n    }\r\n    // function to reverse\r\n    const handlerevClick=()=>{\r\n        let newText=\"\";\r\n        for(let i=text.length-1;i>=0;i--){\r\n            newText += text[i];\r\n        }\r\n        \r\n        setText(newText);\r\n        props.showAlert('reversed','success');\r\n    }\r\n    // function to copy text\r\n    const handlecopyClick=()=>{\r\n    //   var text = document.getElementById('myBox');\r\n    //   text.select();\r\n    //   navigator.clipboard.writeText(text.value);\r\n      navigator.clipboard.writeText(text);\r\n    //   document.getSelection().removeAllRanges();\r\n      props.showAlert('Copied','success');\r\n    }\r\n    // function to clear\r\n    const handleclearClick=()=>{\r\n        let newText=\"\";\r\n        \r\n        setText(newText);\r\n        props.showAlert('Cleared','danger');\r\n    }\r\n    // function to remove Extra spaces\r\n    const handleremoveExtraSpaces=()=>{\r\n        let newText= text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert('Removed Extra Spaces','danger');\r\n    }\r\n    return (\r\n        <>\r\n\r\n            <div className=\"container\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n                <h3>Try TextUtils- Word counter,Character counter, Remove extra spaces</h3>\r\n                <div className=\"mb-3 my-3\" >\r\n                    <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'gray':'white', color: props.mode==='dark'?'white':'black'}} id=\"myBox\" rows=\"6\"></textarea>\r\n                </div>\r\n                <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleUpClick}>Convert to UpperCase</button>\r\n                <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleLowClick}>Convert to LowerCase</button>\r\n                <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handlerevClick}>Reverse</button>\r\n                <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handlecopyClick}>Copy</button>\r\n                <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleremoveExtraSpaces}>Remove Extra Spaces</button>\r\n                <button disabled={text.length===0} className=\"btn btn-danger mx-2 my-2\" onClick={handleclearClick}>Clear</button>\r\n\r\n            </div>\r\n            <div className=\"container\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n                {/* logic to remove blank spaces */}\r\n                <h6>No of Words: {text.split(/\\s+/).filter((element)=>{return element.length!==0}).length}</h6>\r\n                <h6>No of Characters: {text.length}</h6>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        <div style={{height: '50px'}}>\r\n  \r\n\r\n            {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from \"react\";\nimport React from 'react'\nimport About from \"./components/About\";\nimport Footer from \"./components/Footer\";\nimport Navbar from \"./components/Navbar\";\nimport TextUtils from \"./components/TextUtils\";\nimport Alert from \"./components/Alert\";\nimport { HashRouter, Routes, Route} from \"react-router-dom\";\n\nfunction App() {\n\n  //lecture 11: improving dark mode\n  const [mode, setMode] = useState('light');\n\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#665887';\n      showAlert('Dark mode enabled', 'success');\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert('Light mode enabled', 'success');\n    }\n  }\n  return (\n    <>\n      {/* props */}\n      <HashRouter basename=\"/textUtils-krp\">\n      <Navbar title=\"KRP\" link=\"About\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n        <Routes>\n          <Route exact path=\"/textUtils-krp\" element={<TextUtils mode={mode} showAlert={showAlert} />}/>\n          <Route path=\"/about\" element={<About />}/>\n        </Routes>\n\n\n      <Footer mode={mode} />\n      </HashRouter>\n    </>\n  );\n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}